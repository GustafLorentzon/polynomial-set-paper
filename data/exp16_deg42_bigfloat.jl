using LinearAlgebra
@inline function exp16_deg42_bigfloat(A)
    T=promote_type(eltype(A),Complex{BigFloat})
    A_copy=similar(A,T); copyto!(A_copy, A);
    return exp16_deg42_bigfloat!(A_copy)
end

@inline function exp16_deg42_bigfloat!(A)
    T=promote_type(eltype(A),Complex{BigFloat}) # Make it work for many 'bigger' types (matrices and scalars)
    # max_memslots=10
    n=size(A,1)
    # The first slots are precomputed nodes [:A]
    memslots2 = similar(A,T)
    memslots3 = similar(A,T)
    memslots4 = similar(A,T)
    memslots5 = similar(A,T)
    memslots6 = similar(A,T)
    memslots7 = similar(A,T)
    memslots8 = similar(A,T)
    memslots9 = similar(A,T)
    memslots10 = similar(A,T)
    # Assign precomputed nodes memslots
    memslots1=A # overwrite A
    # Uniform scaling is exploited.
    # No matrix I explicitly allocated.
    # Computation order: Bb2 Ba2 B2 Ba3 Bb3 B3 Ba4 Bb4 B4 Ba5 Bb5 B5 Ba6 Bb6 B6 Ba7 Bb7 B7 Ba8 Bb8 B8 y
    # Computing Bb2 with operation: lincomb
    # Computing Bb2 = x*I+x*A
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"1.0" + big"0.0"*im
    memslots2 .= coeff2.*memslots1
    mul!(memslots2, true, I*coeff1, true, true)
    # Computing Ba2 with operation: lincomb
    # Computing Ba2 = x*I+x*A
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"1.0" + big"0.0"*im
    memslots3 .= coeff2.*memslots1
    mul!(memslots3, true, I*coeff1, true, true)
    # Computing B2 with operation: mult
    mul!(memslots4,memslots3,memslots2)
    # Deallocating Ba2 in slot 3
    # Deallocating Bb2 in slot 2
    # Computing Ba3 with operation: lincomb
    # Computing Ba3 = x*I+x*A+x*B2
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"1.58444007943807215270731396917579781137631479023794500610796870262018736754061" + big"-1.395960507971845611517249406918536342804011356678408537356348596503321894825448"*im
    coeff3=big"1.0" + big"0.0"*im
    memslots2 .= coeff2.*memslots1 .+ coeff3.*memslots4
    mul!(memslots2, true, I*coeff1, true, true)
    # Computing Bb3 with operation: lincomb
    # Computing Bb3 = x*I+x*A+x*B2
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"0.8362985632994194996427848598808384898021725427520201896222326214113127637473134" + big"1.513344288077857592302041675074192992148279931031191608986423471364473522885387"*im
    coeff3=big"1.0" + big"0.0"*im
    memslots3 .= coeff2.*memslots1 .+ coeff3.*memslots4
    mul!(memslots3, true, I*coeff1, true, true)
    # Computing B3 with operation: mult
    mul!(memslots5,memslots2,memslots3)
    # Deallocating Ba3 in slot 2
    # Deallocating Bb3 in slot 3
    # Computing Ba4 with operation: lincomb
    # Computing Ba4 = x*I+x*A+x*B2+x*B3
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"6.375652247856688993352815994229553119489851668653963425123116670271073021864255" + big"0.885468518299381859819017099302341544969023979686401600279424482313999889241908"*im
    coeff3=big"0.0" + big"0.0"*im
    coeff4=big"1.0" + big"0.0"*im
    memslots2 .= coeff2.*memslots1 .+ coeff3.*memslots4 .+ coeff4.*memslots5
    mul!(memslots2, true, I*coeff1, true, true)
    # Computing Bb4 with operation: lincomb
    # Computing Bb4 = x*I+x*A+x*B2+x*B3
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"-3.348181828379986643760158126490618081885579732783944313168322118450400210060657" + big"-0.1878140481696191692556676290490506389508297189644529146081197997778426048958953"*im
    coeff3=big"1.0" + big"0.0"*im
    coeff4=big"0.0" + big"0.0"*im
    memslots3 .= coeff2.*memslots1 .+ coeff3.*memslots4 .+ coeff4.*memslots5
    mul!(memslots3, true, I*coeff1, true, true)
    # Computing B4 with operation: mult
    mul!(memslots6,memslots2,memslots3)
    # Deallocating Ba4 in slot 2
    # Deallocating Bb4 in slot 3
    # Computing Ba5 with operation: lincomb
    # Computing Ba5 = x*I+x*A+x*B2+x*B3+x*B4
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"-6.808601692935941723389092842324152977152817854241045563320327371030881424630555" + big"12.54485707971473726866358712189193156117427170060933694365289357567738603502986"*im
    coeff3=big"1.569740480375010980607150666751555484232200236004478955658735922119584511326242" + big"-1.414429212768159268533493408970713059467741950161507211331846956073813312252324"*im
    coeff4=big"4.724523222553011397866757603103046493015590892736128504330023825657712481552486" + big"0.3899785850669577570191128307726613127592883495653818637620544388619444840535461"*im
    coeff5=big"1.0" + big"0.0"*im
    memslots2 .= coeff2.*memslots1 .+ coeff3.*memslots4 .+ coeff4.*memslots5 .+ coeff5.*memslots6
    mul!(memslots2, true, I*coeff1, true, true)
    # Computing Bb5 with operation: lincomb
    # Computing Bb5 = x*I+x*A+x*B2+x*B3+x*B4
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"6.31893779820779131864099517630190351268049779844930501538006261636464062145006" + big"0.1597771243574064162490746173536575704840575642539230351991914150504780404559148"*im
    coeff3=big"2.618664724442844320824384849501600071500313759135451911939895700558078640104808" + big"-2.270266390136874623597233282089390774465606856607290917106809989543957538545202"*im
    coeff4=big"1.0" + big"0.0"*im
    coeff5=big"0.0" + big"0.0"*im
    memslots3 .= coeff2.*memslots1 .+ coeff3.*memslots4 .+ coeff4.*memslots5 .+ coeff5.*memslots6
    mul!(memslots3, true, I*coeff1, true, true)
    # Computing B5 with operation: mult
    mul!(memslots7,memslots2,memslots3)
    # Deallocating Ba5 in slot 2
    # Deallocating Bb5 in slot 3
    # Computing Ba6 with operation: lincomb
    # Computing Ba6 = x*I+x*A+x*B2+x*B3+x*B4+x*B5
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"8.249004837244222033475619466722819767438653976634144076859693620586038023632766" + big"65.0836868550434246512781688269143403150654319386933051605550158690911225366448"*im
    coeff3=big"0.0" + big"0.0"*im
    coeff4=big"39.85357502273375031190809837702913529886907119657464825753768265273956758792388" + big"-28.07735400666109689297428112031447663478020136987200165512628138361947765330554"*im
    coeff5=big"4.382208455677985409861828186678532415776731627162213957110162265416955479244104" + big"-1.105299351275134719003649505513767879531361559138052715880124370358146414352862"*im
    coeff6=big"1.0" + big"0.0"*im
    memslots2 .= coeff2.*memslots1 .+ coeff3.*memslots4 .+ coeff4.*memslots5 .+ coeff5.*memslots6 .+ coeff6.*memslots7
    mul!(memslots2, true, I*coeff1, true, true)
    # Computing Bb6 with operation: lincomb
    # Computing Bb6 = x*I+x*A+x*B2+x*B3+x*B4+x*B5
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"7.426908143003604870533041407650407514335193112814416936676988367693877822810897" + big"2.542941775448680804569428481935882325584720968202969417085441698629971474616874"*im
    coeff3=big"19.09738376454484832599240484522613599394469080750261343997035932864084188595035" + big"-1.826767897845670641965448927415008844872279300438992044000280777819961518819351"*im
    coeff4=big"2.536510334974342690026832927649005853177839776775829769340991236824857091984471" + big"0.6076881686091713279585829810321375572873941344649405454035116491452191767692767"*im
    coeff5=big"1.0" + big"0.0"*im
    coeff6=big"0.0" + big"0.0"*im
    memslots3 .= coeff2.*memslots1 .+ coeff3.*memslots4 .+ coeff4.*memslots5 .+ coeff5.*memslots6 .+ coeff6.*memslots7
    mul!(memslots3, true, I*coeff1, true, true)
    # Computing B6 with operation: mult
    mul!(memslots8,memslots2,memslots3)
    # Deallocating Ba6 in slot 2
    # Deallocating Bb6 in slot 3
    # Computing Ba7 with operation: lincomb
    # Computing Ba7 = x*I+x*A+x*B2+x*B3+x*B4+x*B5+x*B6
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"304.8534107855032291566411951078105827714412125144949317746335108409009144205106" + big"435.7943373663025044941680898099171471802417781402495895954358403069594588555013"*im
    coeff3=big"465.3954980017930289349395884991093514535718545763537974191679701122584779349935" + big"1928.774224856388169643873029990249091477399106777291895614971775054668654266244"*im
    coeff4=big"-772.5735928721261065603563771480025203054921975215941911662824576783629692999396" + big"553.3733461322969613057873559707462742218240609507119026469856214952191977008922"*im
    coeff5=big"-87.87718571593319518282880625597237269560586023766960088264071027090849440436336" + big"96.12479896319797504141717443687709346261389082822808117308026646382417729066382"*im
    coeff6=big"-19.41301644677491713168178345110429456475447453693167947558796124775830861402754" + big"0.08626434714601752067192387248722241816080777781469099564418517255610114052165281"*im
    coeff7=big"1.0" + big"0.0"*im
    memslots2 .= coeff2.*memslots1 .+ coeff3.*memslots4 .+ coeff4.*memslots5 .+ coeff5.*memslots6 .+ coeff6.*memslots7 .+ coeff7.*memslots8
    mul!(memslots2, true, I*coeff1, true, true)
    # Computing Bb7 with operation: lincomb
    # Computing Bb7 = x*I+x*A+x*B2+x*B3+x*B4+x*B5+x*B6
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"10.51080519081211803985335359061238756539475651780738732400341421828617439046956" + big"6.242097832373526950984301849007456213066357054322231789309448295642114217520837"*im
    coeff3=big"-52.78387748400506972013832716258546938653943071351478977781020760986149458514229" + big"-22.2483480939667096537522431699956791143818070635459694167961445098284231257473"*im
    coeff4=big"38.23646224322801864789411845854100909649226729865100966221119999210765352220803" + big"-39.21905642772004329931006213240239086994378678589706912872340017249013908917396"*im
    coeff5=big"2.762936078783901096673442623667437884166877318903372661871522230968079085440298" + big"-1.439378976391782408220597163090433799255432872137742529304009036528440151656878"*im
    coeff6=big"1.0" + big"0.0"*im
    coeff7=big"0.0" + big"0.0"*im
    memslots3 .= coeff2.*memslots1 .+ coeff3.*memslots4 .+ coeff4.*memslots5 .+ coeff5.*memslots6 .+ coeff6.*memslots7 .+ coeff7.*memslots8
    mul!(memslots3, true, I*coeff1, true, true)
    # Computing B7 with operation: mult
    mul!(memslots9,memslots2,memslots3)
    # Deallocating Ba7 in slot 2
    # Deallocating Bb7 in slot 3
    # Computing Ba8 with operation: lincomb
    # Computing Ba8 = x*I+x*A+x*B2+x*B3+x*B4+x*B5+x*B6+x*B7
    coeff1=big"-0.0" + big"0.0"*im
    coeff2=big"-88.09458998969606393456396026424073922246476656227597461215821190240975377365098" + big"-594.4012503240502156492258101033753245791566048345248877245296479724734471488914"*im
    coeff3=big"46185.7384828882600382156473984317468792104084965169637548652129491277911670808" + big"-92443.74038237115886984378579454439316768581853668872493972347083759413527116133"*im
    coeff4=big"-13022.10489984334338703851178895307541720400994380874924637295422202923735704705" + big"5569.324256735599234524853253751068662509203944817132261298648564572929007156753"*im
    coeff5=big"1090.903206610648269382745526761826394212028471771946406162713471602124311048563" + big"-4877.961600583514534177085576552579330341624568093870892455020133499269376010473"*im
    coeff6=big"-99.09941154910298875944736022784927517548119939748976332364605044724460196867393" + big"-259.5681289585797673260158610279793636832217447562205139140529956026106806583097"*im
    coeff7=big"-47.93742136056978292091505373248489377107607495641542633072456752790246336823417" + big"-37.29046131513980373796407168825374846421535569197010866855906931641563953305687"*im
    coeff8=big"1.0" + big"0.0"*im
    memslots2 .= coeff2.*memslots1 .+ coeff3.*memslots4 .+ coeff4.*memslots5 .+ coeff5.*memslots6 .+ coeff6.*memslots7 .+ coeff7.*memslots8 .+ coeff8.*memslots9
    mul!(memslots2, true, I*coeff1, true, true)
    # Computing Bb8 with operation: lincomb
    # Computing Bb8 = x*I+x*A+x*B2+x*B3+x*B4+x*B5+x*B6+x*B7
    coeff1=big"0.0" + big"0.0"*im
    coeff2=big"234.8135383752222093881600166298379915734028488359697628873813071897158373475322" + big"94.63946355367606432580975051415220110898119578583157784610808391337712606775266"*im
    coeff3=big"419.7945638907327767958795405537020558784060697834464532894511550833658209145886" + big"1438.293227983436040749793201790599133332397552749159784585633933166239903339925"*im
    coeff4=big"155.5553549403284610496996261401349221515846010683181638692838200183458007864358" + big"-241.5123648028717916964354323719330148851315347931341736647047808428281579008076"*im
    coeff5=big"34.97166608032267821903888544142054547322234718239397093059912366588861894167396" + big"63.6849191027912629616817796933774427152572021900676476650940875033928864510003"*im
    coeff6=big"4.034990110990166042106540370089358834496844002820798554975714858694596278223767" + big"1.078189193259602166348526944086536477406180259280589483473023510420620422326412"*im
    coeff7=big"1.0" + big"0.0"*im
    coeff8=big"0.0" + big"0.0"*im
    memslots3 .= coeff2.*memslots1 .+ coeff3.*memslots4 .+ coeff4.*memslots5 .+ coeff5.*memslots6 .+ coeff6.*memslots7 .+ coeff7.*memslots8 .+ coeff8.*memslots9
    mul!(memslots3, true, I*coeff1, true, true)
    # Computing B8 with operation: mult
    mul!(memslots10,memslots2,memslots3)
    # Deallocating Ba8 in slot 2
    # Deallocating Bb8 in slot 3
    # Computing y with operation: lincomb
    # Computing y = x*I+x*A+x*B2+x*B3+x*B4+x*B5+x*B6+x*B7+x*B8
    coeff1=big"1.0" + big"2.482935408098124778651121285253693318183865795796612103273821272286247626718672e-146"*im
    coeff2=big"16.0" + big"-5.149370397595671175539192402512949952026506424221313688557125747885004620658497e-145"*im
    coeff3=big"2.249960953975170699060469334357040241585205948718255877258440137931851205873901e+06" + big"-1.700002399650597034891083999365039874169954234969702964877747000635807707526153e+06"*im
    coeff4=big"228695.4518797881348608618455048040459732343079972722866207118843658126011197608" + big"72397.45882504294261620760505223927528889984016216527405231318321306508932767821"*im
    coeff5=big"134809.0105693524049200347577011006333694992199261256626187502491861391746696614" + big"-60016.94543945243140368316432846537225495029404167706365640455960792886616105449"*im
    coeff6=big"8762.785342197853126961443952358655344994169352190818876194509167210145974543806" + big"2630.233979254038180294147377566959538584982244705734542381929792644807912481301"*im
    coeff7=big"-677.1635203234328965644168375391213755169485583009156885704029592317039133418712" + big"-1499.398087437768430895717532140348639674895860320653495421319016931337643317227"*im
    coeff8=big"17.1472470828741047728050129721079433660950081273139754620868205036180016793401" + big"13.29116428501084723927745142754974573680306174378008191148510023029595259077925"*im
    coeff9=big"0.2662938007381101653792779196791217724842513419245600953214432782819114207796782" + big"-9.297753385893747486414328118961849357845194097910774684772879624353599583216008e-150"*im
    # Smart lincomb recycle A
    memslots1 .= coeff2.*memslots1 .+ coeff3.*memslots4 .+ coeff4.*memslots5 .+ coeff5.*memslots6 .+ coeff6.*memslots7 .+ coeff7.*memslots8 .+ coeff8.*memslots9 .+ coeff9.*memslots10
    mul!(memslots1, true, I*coeff1, true, true)
    # Deallocating B2 in slot 4
    # Deallocating B3 in slot 5
    # Deallocating B4 in slot 6
    # Deallocating B5 in slot 7
    # Deallocating B6 in slot 8
    # Deallocating B7 in slot 9
    # Deallocating B8 in slot 10
    return memslots1 # Returning y
end

